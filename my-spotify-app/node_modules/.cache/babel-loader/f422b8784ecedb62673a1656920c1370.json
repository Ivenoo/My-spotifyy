{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\src\\\\Content.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport FindSound from './FindSound';\nimport FindArtist from './FindArtist';\nimport HomePage from './HomePage';\nimport FindGenres from './FindGenres';\nimport findAlbum from './FindAlbum';\n\nvar Content =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Content, _React$Component);\n\n  function Content(props) {\n    var _this;\n\n    _classCallCheck(this, Content);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Content).call(this, props));\n    _this.state = {\n      typeTracks: []\n    };\n    return _this;\n  }\n\n  _createClass(Content, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios({\n        url: \"https://api.spotify.com/v1/recommendations/available-genre-seeds\",\n        headers: {\n          'Authorization': 'Bearer ' + this.props.mytoken\n        }\n      }).then(function (resp) {\n        _this2.setState({\n          typeTracks: resp.data.genres\n        });\n      }).catch(function (error) {\n        return new Error(console.log(error));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render(props) {\n      if (this.props.action === \"findSound\") {\n        return React.createElement(FindSound, {\n          mytoken: this.props.mytoken,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      } else if (this.props.action === \"findArtist\") {\n        return React.createElement(FindArtist, {\n          mytoken: this.props.mytoken,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        });\n      } else if (this.props.action === \"homePage\") {\n        return React.createElement(HomePage, {\n          mytoken: this.props.mytoken,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      } else if (this.props.action === \"findGenres\") {\n        return React.createElement(FindGenres, {\n          mytoken: this.props.mytoken,\n          typeTracks: this.state.typeTracks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        });\n      } else if (this.props.action === \"findAlbum\") {\n        return React.createElement(FindGenres, {\n          mytoken: this.props.mytoken,\n          typeTracks: this.state.typeTracks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return Content;\n}(React.Component);\n\nexport default Content;","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\Content.js"],"names":["React","axios","FindSound","FindArtist","HomePage","FindGenres","findAlbum","Content","props","state","typeTracks","url","headers","mytoken","then","resp","setState","data","genres","catch","error","Error","console","log","action","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAc;AACZC,MAAAA,UAAU,EAAC;AADC,KAAd;AAFgB;AAKjB;;;;wCAEkB;AAAA;;AACjBT,MAAAA,KAAK,CAAC;AACJU,QAAAA,GAAG,oEADC;AAEJC,QAAAA,OAAO,EAAC;AACP,2BAAiB,YAAY,KAAKJ,KAAL,CAAWK;AADjC;AAFJ,OAAD,CAAL,CAKGC,IALH,CAKQ,UAAAC,IAAI,EACV;AAAE,QAAA,MAAI,CAACC,QAAL,CAAc;AACdN,UAAAA,UAAU,EAAEK,IAAI,CAACE,IAAL,CAAUC;AADR,SAAd;AAGH,OATD,EASGC,KATH,CASS,UAAAC,KAAK;AAAA,eAAK,IAAIC,KAAJ,CAAUC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAV,CAAL;AAAA,OATd;AAUD;;;2BAEMZ,K,EAAO;AACZ,UAAG,KAAKA,KAAL,CAAWgB,MAAX,KAAsB,WAAzB,EAAqC;AACrC,eACE,oBAAC,SAAD;AAAY,UAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWK,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJC,MAII,IAAG,KAAKL,KAAL,CAAWgB,MAAX,KAAsB,YAAzB,EAAsC;AAC1C,eACE,oBAAC,UAAD;AAAa,UAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWK,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJK,MAIA,IAAG,KAAKL,KAAL,CAAWgB,MAAX,KAAsB,UAAzB,EAAoC;AACxC,eACE,oBAAC,QAAD;AAAW,UAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWK,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJK,MAIA,IAAG,KAAKL,KAAL,CAAWgB,MAAX,KAAsB,YAAzB,EAAsC;AAC1C,eACE,oBAAC,UAAD;AAAa,UAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWK,OAAjC;AAA0C,UAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWC,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJK,MAIA,IAAG,KAAKF,KAAL,CAAWgB,MAAX,KAAsB,WAAzB,EAAqC;AACzC,eACE,oBAAC,UAAD;AAAa,UAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWK,OAAjC;AAA0C,UAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWC,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACA;;;;EA3CmBV,KAAK,CAACyB,S;;AA8C5B,eAAelB,OAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport FindSound from './FindSound';\r\nimport FindArtist from './FindArtist';\r\nimport HomePage from './HomePage';\r\nimport FindGenres from './FindGenres';\r\nimport findAlbum from './FindAlbum';\r\n\r\nclass Content extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = ({\r\n      typeTracks:[],\r\n    })\r\n  }\r\n  \r\n  componentDidMount(){\r\n    axios({\r\n      url: `https://api.spotify.com/v1/recommendations/available-genre-seeds`,\r\n      headers:{\r\n       'Authorization': 'Bearer ' + this.props.mytoken\r\n      }\r\n    }).then(resp =>\r\n      { this.setState({\r\n        typeTracks: resp.data.genres\r\n     })\r\n    }).catch(error => (new Error(console.log(error))))\r\n  }\r\n \r\n  render(props) {\r\n    if(this.props.action === \"findSound\"){\r\n    return(\r\n      <FindSound  mytoken={this.props.mytoken}/>\r\n    )\r\n  }else if(this.props.action === \"findArtist\"){\r\n    return(\r\n      <FindArtist  mytoken={this.props.mytoken} />\r\n    )\r\n  }else if(this.props.action === \"homePage\"){\r\n    return(\r\n      <HomePage  mytoken={this.props.mytoken}/>\r\n    )\r\n  }else if(this.props.action === \"findGenres\"){\r\n    return(\r\n      <FindGenres  mytoken={this.props.mytoken} typeTracks={this.state.typeTracks}/>\r\n    )\r\n  }else if(this.props.action === \"findAlbum\"){\r\n    return(\r\n      <FindGenres  mytoken={this.props.mytoken} typeTracks={this.state.typeTracks}/>\r\n    )\r\n  }\r\n  }\r\n}\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}