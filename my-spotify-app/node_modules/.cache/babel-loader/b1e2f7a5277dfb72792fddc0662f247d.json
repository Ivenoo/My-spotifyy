{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\src\\\\FindSound.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport SingleTrack from './SingleTrack';\nimport { search, getTracks } from './Service';\n\nvar FindSound =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FindSound, _React$Component);\n\n  function FindSound(props) {\n    var _this;\n\n    _classCallCheck(this, FindSound);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FindSound).call(this, props));\n\n    _this.getTn = function () {\n      getTracks(_this.state.searchValue, _this.state.next, _this.state, _this.props.mytoken);\n    };\n\n    _this.getTp = function () {\n      getTracks(_this.state.searchValue, _this.state.prev, _this.state, _this.props.mytoken);\n    };\n\n    _this.exist = function () {\n      if (_this.state.trackList.length <= 0 && _this.state.searchValue.length > 0) {\n        _this.setState({\n          notFindTracks: 'exist'\n        });\n      } else {\n        _this.setState({\n          notFindTracks: 'notexist'\n        });\n      }\n    };\n\n    _this.state = {\n      searchValue: [],\n      trackList: [],\n      limit: 5,\n      prev: null,\n      next: null,\n      myoffset: 'offset=0',\n      notFindTracks: 'notexist',\n      timeout: 0,\n      refresh: \"\"\n    };\n    return _this;\n  } // limit(e){\n  //   const valueLimit = e.currentTarget.value\n  //   if(this.state.searchValue === []){\n  //     console.log('please write name of tracks')\n  //     this.setState({\n  //     trackList: []\n  //   })\n  //   }else{\n  //     this.setState({\n  //       limit: valueLimit\n  //     })\n  //     axios({\n  //       url: `https://api.spotify.com/v1/search?q=${this.state.searchValue}&type=track&${this.state.myoffset}&limit=${valueLimit}`,\n  //       headers:{\n  //        'Authorization': 'Bearer ' + this.props.mytoken\n  //       }\n  //     }).then(resp =>{ this.setState({\n  //       trackList: resp.data.tracks.items,\n  //       prev: resp.data.tracks.previous,\n  //       next: resp.data.tracks.next\n  //      })\n  //      this.createfav()\n  //     }).catch(error => (new Error(console.log(error))))\n  //   }\n  // }\n\n\n  _createClass(FindSound, [{\n    key: \"searching\",\n    value: function searching(event) {\n      var _this2 = this;\n\n      search(event, this.state, this.props.mytoken);\n      var timeouter = this.state.timeout;\n      if (timeouter) clearTimeout(timeouter);\n      timeouter = setTimeout(function () {\n        _this2.setState({\n          refresh: \"\"\n        });\n      }, 1000);\n      console.log(this.state.trackList);\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(url) {\n      if (url != null) {\n        window.open(url);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var prevButton = \"\",\n          nextButton = \"\";\n\n      if (this.state.prev !== null) {\n        prevButton = React.createElement(\"button\", {\n          onClick: this.getTp(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Previous\");\n      }\n\n      if (this.state.next !== null) {\n        nextButton = React.createElement(\"button\", {\n          onClick: this.getTn(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Next\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"szukajka\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Tracks...\",\n        onChange: this.searching.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \"search:\", this.state.searchValue, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: this.state.notFindTracks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.searchValue, \" \"), \" not exist\"), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.state.trackList.map(function (element, index) {\n        return React.createElement(SingleTrack, {\n          key: index,\n          parentElement: element,\n          parentIndex: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        });\n      })), prevButton, nextButton);\n    }\n  }]);\n\n  return FindSound;\n}(React.Component);\n\nexport default FindSound;","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\FindSound.js"],"names":["React","axios","SingleTrack","search","getTracks","FindSound","props","getTn","state","searchValue","next","mytoken","getTp","prev","exist","trackList","length","setState","notFindTracks","limit","myoffset","timeout","refresh","event","timeouter","clearTimeout","setTimeout","console","log","url","window","open","prevButton","nextButton","searching","bind","map","element","index","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport SingleTrack from './SingleTrack';\r\nimport {search,getTracks} from './Service'\r\n\r\n\r\n\r\nclass FindSound extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchValue: [],\r\n      trackList:[],\r\n      limit: 5,\r\n      prev: null,\r\n      next: null,\r\n      myoffset: 'offset=0',\r\n      notFindTracks: 'notexist',\r\n       timeout: 0,\r\n       refresh : \"\"\r\n      \r\n    }\r\n  }\r\n// limit(e){\r\n//   const valueLimit = e.currentTarget.value\r\n//   if(this.state.searchValue === []){\r\n//     console.log('please write name of tracks')\r\n//     this.setState({\r\n//     trackList: []\r\n//   })\r\n//   }else{\r\n//     this.setState({\r\n//       limit: valueLimit\r\n//     })\r\n//     axios({\r\n//       url: `https://api.spotify.com/v1/search?q=${this.state.searchValue}&type=track&${this.state.myoffset}&limit=${valueLimit}`,\r\n//       headers:{\r\n//        'Authorization': 'Bearer ' + this.props.mytoken\r\n//       }\r\n//     }).then(resp =>{ this.setState({\r\n//       trackList: resp.data.tracks.items,\r\n//       prev: resp.data.tracks.previous,\r\n//       next: resp.data.tracks.next\r\n//      })\r\n//      this.createfav()\r\n//     }).catch(error => (new Error(console.log(error))))\r\n//   }\r\n// }\r\n\r\nsearching(event){\r\n  search(event, this.state,this.props.mytoken)\r\n\r\n  let timeouter = this.state.timeout\r\n  if(timeouter) clearTimeout(timeouter);\r\n  timeouter = setTimeout(() =>{this.setState({\r\n    refresh: \"\"\r\n  }) },1000)\r\n  console.log(this.state.trackList)\r\n}\r\n\r\ngetTn =() =>{\r\n  getTracks(this.state.searchValue,this.state.next,this.state,this.props.mytoken)\r\n  \r\n}\r\ngetTp =() =>{\r\n  getTracks(this.state.searchValue,this.state.prev,this.state,this.props.mytoken)\r\n}\r\n\r\nlisten(url){\r\n  if(url != null){\r\nwindow.open(url)\r\n}\r\n}\r\n\r\nexist =() =>{\r\n  if(this.state.trackList.length <= 0 && this.state.searchValue.length > 0){\r\n  this.setState({\r\n    notFindTracks: 'exist'\r\n  })\r\n  }else{\r\n    this.setState({\r\n      notFindTracks: 'notexist'\r\n    })\r\n}\r\n}\r\n\r\n  render() {\r\n    let prevButton = \"\", nextButton = \"\";\r\n    if(this.state.prev !==null){\r\n      prevButton = <button onClick={this.getTp(this)}>Previous</button>\r\n    }\r\n    if(this.state.next !==null){\r\n      nextButton = <button onClick={this.getTn(this)}>Next</button>\r\n    }\r\n    return(\r\n      <div>\r\n        <div className=\"szukajka\">\r\n        <input type=\"text\" placeholder=\"Search Tracks...\" onChange={this.searching.bind(this)}/>\r\n        {/* <select onChange={this.limit.bind(this)}>\r\n          <option>5</option>\r\n          <option>10</option>\r\n          <option>15</option>\r\n          <option>20</option>\r\n          <option>25</option>\r\n          <option>30</option>\r\n        </select> */}\r\n        <br/>\r\n       search:{this.state.searchValue}<br/>\r\n\r\n       </div>\r\n       <span className={this.state.notFindTracks}><strong className=\"title\">{this.state.searchValue} </strong> not exist</span>\r\n       <ol>\r\n       {\r\n         this.state.trackList.map((element, index)=>\r\n         <SingleTrack  key={index} parentElement={element} parentIndex={index}/>\r\n        )}\r\n       </ol>\r\n      {prevButton}\r\n      {nextButton}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FindSound;\r\n"]},"metadata":{},"sourceType":"module"}