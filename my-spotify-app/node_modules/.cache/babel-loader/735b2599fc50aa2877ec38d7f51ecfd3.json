{"ast":null,"code":"var _this = this;\n\nexport var searche = function searche(e) {\n  var value = e.currentTarget.value;\n\n  _this.setState({\n    searchValueToExist: value\n  });\n\n  if (_this.state.timeout) clearTimeout(_this.state.timeout);\n  _this.state.timeout = setTimeout(function () {\n    _this.setState({\n      searchValue: value\n    });\n\n    if (value === '') {\n      _this.setState({\n        albumList: []\n      });\n    } else {\n      _this.getList(value);\n    }\n  }, 400);\n};\n\ngetList = function getList(value) {\n  axios({\n    url: \"https://api.spotify.com/v1/search?q=\".concat(value, \"&type=album&limit=10\"),\n    headers: {\n      'Authorization': 'Bearer ' + _this.props.mytoken\n    }\n  }).then(function (resp) {\n    _this.setState({\n      albumList: resp.data.albums.items\n    });\n\n    _this.exist();\n  }).catch(function (error) {\n    return new Error(console.log(error));\n  });\n}; // listen(url){\n//   if(url != null){\n// window.open(url)\n// }\n// }\n// showSongs(index, id){\n// const div= document.getElementById(index);\n// if(this.state.timeout) clearTimeout(this.state.timeout);\n//   this.state.timeout = setTimeout(() => {\n// if(div.innerHTML === \"\"){\n//   axios({\n//     url: `https://api.spotify.com/v1/albums/${id}/tracks`,\n//     headers:{\n//      'Authorization': 'Bearer ' + this.props.mytoken\n//     }\n//   }).then(resp =>{ \n//    resp.data.items.map(element => {\n//      if(element.preview_url != null){\n//     return(div.innerHTML = div.innerHTML + `<li>  <a  class=\"name-songs-linked\" style=\"color:blue\" href=${element.preview_url} target=\"_blank\"> ${element.name} </a>  </li><br/>`)\n//   }else{\n//     return(div.innerHTML = div.innerHTML + `<li> ${element.name} </li><br/>`)\n//   }})\n//   }).catch(error => (new Error(console.log(error))))\n// }\n// }, 400);\n// }\n// changeButton = (id) =>{\n//   document.getElementById(id).style.display = \"none\";\n//   document.getElementById(id +'a').style.display = \"block\";\n// }\n// openList = (index, id) =>{\n//   this.showSongs(index, id)\n//  // changeButton()\n//  this.changeButton(id)\n// }\n// closeList = (index, id) =>{\n//   // const div= document.getElementById(index);\n//   document.getElementById(index).innerHTML = \"\";\n//   document.getElementById(id).style.display = \"block\";\n//   document.getElementById(id +'a').style.display = \"none\";\n// }\n// exist =() =>{\n//   if(this.state.albumList.length <= 0 && this.state.searchValueToExist.length > 0){\n//   this.setState({\n//     notFindAlbum: 'exist'\n//   })\n//   }else{\n//     this.setState({\n//       notFindAlbum: 'notexist'\n//     })\n// }\n// }\n// test2000 = ()=>{\n//    console.log('dziala')\n//   }","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\Service.js"],"names":["searche","e","value","currentTarget","setState","searchValueToExist","state","timeout","clearTimeout","setTimeout","searchValue","albumList","getList","axios","url","headers","props","mytoken","then","resp","data","albums","items","exist","catch","error","Error","console","log"],"mappings":";;AACC,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAM;AAC5B,MAAMC,KAAK,GAAGD,CAAC,CAACE,aAAF,CAAgBD,KAA9B;;AACA,EAAA,KAAI,CAACE,QAAL,CAAc;AACZC,IAAAA,kBAAkB,EAAEH;AADR,GAAd;;AAGA,MAAG,KAAI,CAACI,KAAL,CAAWC,OAAd,EAAuBC,YAAY,CAAC,KAAI,CAACF,KAAL,CAAWC,OAAZ,CAAZ;AACvB,EAAA,KAAI,CAACD,KAAL,CAAWC,OAAX,GAAqBE,UAAU,CAAC,YAAM;AACtC,IAAA,KAAI,CAACL,QAAL,CAAc;AACZM,MAAAA,WAAW,EAAER;AADD,KAAd;;AAGA,QAAGA,KAAK,KAAK,EAAb,EAAgB;AAChB,MAAA,KAAI,CAACE,QAAL,CAAc;AACdO,QAAAA,SAAS,EAAE;AADG,OAAd;AAGD,KAJC,MAIG;AACL,MAAA,KAAI,CAACC,OAAL,CAAaV,KAAb;AACC;AACA,GAXgC,EAW9B,GAX8B,CAA/B;AAYD,CAlBO;;AAoBRU,OAAO,GAAG,iBAACV,KAAD,EAAU;AAClBW,EAAAA,KAAK,CAAC;AACJC,IAAAA,GAAG,gDAAyCZ,KAAzC,yBADC;AAEJa,IAAAA,OAAO,EAAC;AACP,uBAAiB,YAAY,KAAI,CAACC,KAAL,CAAWC;AADjC;AAFJ,GAAD,CAAL,CAKGC,IALH,CAKQ,UAAAC,IAAI,EAAG;AACb,IAAA,KAAI,CAACf,QAAL,CAAc;AACZO,MAAAA,SAAS,EAAEQ,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC;AADhB,KAAd;;AAGC,IAAA,KAAI,CAACC,KAAL;AACF,GAVD,EAUGC,KAVH,CAUS,UAAAC,KAAK;AAAA,WAAK,IAAIC,KAAJ,CAAUC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAV,CAAL;AAAA,GAVd;AAWD,CAZD,C,CAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\n export const searche = (e) =>{\r\n  const value = e.currentTarget.value\r\n  this.setState({\r\n    searchValueToExist: value\r\n  })\r\n  if(this.state.timeout) clearTimeout(this.state.timeout);\r\n  this.state.timeout = setTimeout(() => {\r\n  this.setState({\r\n    searchValue: value\r\n  })\r\n  if(value === ''){\r\n  this.setState({\r\n  albumList: []\r\n})\r\n}else{\r\nthis.getList(value)\r\n}\r\n}, 400);\r\n}\r\n\r\ngetList = (value) =>{\r\n  axios({\r\n    url: `https://api.spotify.com/v1/search?q=${value}&type=album&limit=10`,\r\n    headers:{\r\n     'Authorization': 'Bearer ' + this.props.mytoken\r\n    }\r\n  }).then(resp =>{ \r\n    this.setState({\r\n      albumList: resp.data.albums.items\r\n     })\r\n     this.exist()\r\n  }).catch(error => (new Error(console.log(error))))\r\n}\r\n// listen(url){\r\n//   if(url != null){\r\n// window.open(url)\r\n// }\r\n// }\r\n\r\n// showSongs(index, id){\r\n// const div= document.getElementById(index);\r\n\r\n// if(this.state.timeout) clearTimeout(this.state.timeout);\r\n//   this.state.timeout = setTimeout(() => {\r\n// if(div.innerHTML === \"\"){\r\n//   axios({\r\n//     url: `https://api.spotify.com/v1/albums/${id}/tracks`,\r\n//     headers:{\r\n//      'Authorization': 'Bearer ' + this.props.mytoken\r\n//     }\r\n//   }).then(resp =>{ \r\n//    resp.data.items.map(element => {\r\n//      if(element.preview_url != null){\r\n//     return(div.innerHTML = div.innerHTML + `<li>  <a  class=\"name-songs-linked\" style=\"color:blue\" href=${element.preview_url} target=\"_blank\"> ${element.name} </a>  </li><br/>`)\r\n//   }else{\r\n//     return(div.innerHTML = div.innerHTML + `<li> ${element.name} </li><br/>`)\r\n//   }})\r\n\r\n//   }).catch(error => (new Error(console.log(error))))\r\n// }\r\n// }, 400);\r\n// }\r\n// changeButton = (id) =>{\r\n//   document.getElementById(id).style.display = \"none\";\r\n//   document.getElementById(id +'a').style.display = \"block\";\r\n// }\r\n// openList = (index, id) =>{\r\n//   this.showSongs(index, id)\r\n//  // changeButton()\r\n//  this.changeButton(id)\r\n// }\r\n// closeList = (index, id) =>{\r\n//   // const div= document.getElementById(index);\r\n//   document.getElementById(index).innerHTML = \"\";\r\n//   document.getElementById(id).style.display = \"block\";\r\n//   document.getElementById(id +'a').style.display = \"none\";\r\n// }\r\n\r\n\r\n// exist =() =>{\r\n//   if(this.state.albumList.length <= 0 && this.state.searchValueToExist.length > 0){\r\n//   this.setState({\r\n//     notFindAlbum: 'exist'\r\n//   })\r\n//   }else{\r\n//     this.setState({\r\n//       notFindAlbum: 'notexist'\r\n//     })\r\n// }\r\n// }\r\n// test2000 = ()=>{\r\n//    console.log('dziala')\r\n//   }\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}