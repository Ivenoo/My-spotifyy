{"ast":null,"code":"import axios from 'axios';\nexport var search = function search(event, state, mytoken) {\n  var value = event.currentTarget.value;\n  state.searchValue = value;\n  state.searchValue = value;\n\n  if (value === '') {\n    state.trackList = [];\n    state.prev = null;\n    state.next = null;\n  } else {\n    getTracks(value, 0, state, mytoken);\n  }\n};\nexport var getTracks = function getTracks(value, link, state, mytoken) {\n  var url = \"https://api.spotify.com/v1/search?q=\".concat(value, \"&type=track&limit=\").concat(state.limit);\n\n  if (link !== 0) {\n    url = link;\n    var start = link.indexOf('offset=');\n    var stop = link.indexOf('&limit');\n    var finishoff = link.slice(start, stop);\n    state.myoffset = finishoff;\n  }\n\n  axios({\n    url: url,\n    headers: {\n      'Authorization': 'Bearer ' + mytoken\n    }\n  }).then(function (resp) {\n    resp.data.tracks.items.map(function (element) {\n      state.trackList.push(element);\n    });\n    state.prev = resp.data.tracks.previous;\n    state.next = resp.data.tracks.next; //  this.exist()\n    //  this.createfav()\n  }).catch(function (error) {\n    return new Error(console.log(error));\n  });\n};","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\Service.js"],"names":["axios","search","event","state","mytoken","value","currentTarget","searchValue","trackList","prev","next","getTracks","link","url","limit","start","indexOf","stop","finishoff","slice","myoffset","headers","then","resp","data","tracks","items","map","element","push","previous","catch","error","Error","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAOC,KAAP,EAAaC,OAAb,EAAwB;AAC1C,MAAMC,KAAK,GAAGH,KAAK,CAACI,aAAN,CAAoBD,KAAlC;AACFF,EAAAA,KAAK,CAACI,WAAN,GAAoBF,KAApB;AACEF,EAAAA,KAAK,CAACI,WAAN,GAAoBF,KAApB;;AACF,MAAGA,KAAK,KAAK,EAAb,EAAgB;AAChBF,IAAAA,KAAK,CAACK,SAAN,GAAmB,EAAnB;AACAL,IAAAA,KAAK,CAACM,IAAN,GAAa,IAAb;AACAN,IAAAA,KAAK,CAACO,IAAN,GAAa,IAAb;AACD,GAJC,MAIG;AACJC,IAAAA,SAAS,CAACN,KAAD,EAAO,CAAP,EAASF,KAAT,EAAeC,OAAf,CAAT;AACA;AACA,CAXM;AAeP,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACN,KAAD,EAAOO,IAAP,EAAYT,KAAZ,EAAkBC,OAAlB,EAA6B;AAEpD,MAAIS,GAAG,iDAA0CR,KAA1C,+BAAoEF,KAAK,CAACW,KAA1E,CAAP;;AACA,MAAGF,IAAI,KAAK,CAAZ,EAAc;AACZC,IAAAA,GAAG,GAAGD,IAAN;AACA,QAAMG,KAAK,GAAGH,IAAI,CAACI,OAAL,CAAa,SAAb,CAAd;AACA,QAAMC,IAAI,GAAGL,IAAI,CAACI,OAAL,CAAa,QAAb,CAAb;AACA,QAAME,SAAS,GAAGN,IAAI,CAACO,KAAL,CAAWJ,KAAX,EAAiBE,IAAjB,CAAlB;AACEd,IAAAA,KAAK,CAACiB,QAAN,GAAiBF,SAAjB;AACH;;AACDlB,EAAAA,KAAK,CAAC;AACJa,IAAAA,GAAG,EAAEA,GADD;AAEJQ,IAAAA,OAAO,EAAC;AACP,uBAAiB,YAAYjB;AADtB;AAFJ,GAAD,CAAL,CAKGkB,IALH,CAKQ,UAAAC,IAAI,EAAG;AACbA,IAAAA,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2B,UAAAC,OAAO,EAAG;AACnCzB,MAAAA,KAAK,CAACK,SAAN,CAAgBqB,IAAhB,CAAqBD,OAArB;AACD,KAFD;AAGAzB,IAAAA,KAAK,CAACM,IAAN,GAAac,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBK,QAA9B;AACA3B,IAAAA,KAAK,CAACO,IAAN,GAAaa,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBf,IAA9B,CALa,CAMf;AACA;AACC,GAbD,EAaGqB,KAbH,CAaS,UAAAC,KAAK;AAAA,WAAK,IAAIC,KAAJ,CAAUC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAV,CAAL;AAAA,GAbd;AAcD,CAxBM","sourcesContent":["import axios from 'axios'\r\n\r\nexport const search = (event,state,mytoken) =>{\r\n    const value = event.currentTarget.value\r\n  state.searchValue = value;\r\n    state.searchValue = value\r\n  if(value === ''){\r\n  state.trackList =  [];\r\n  state.prev = null;\r\n  state.next = null;\r\n}else{\r\n getTracks(value,0,state,mytoken)\r\n}\r\n}\r\n\r\n\r\n\r\nexport const getTracks = (value,link,state,mytoken) =>{\r\n \r\n  let url = `https://api.spotify.com/v1/search?q=${value}&type=track&limit=${state.limit}`\r\n  if(link !== 0){\r\n    url = link;\r\n    const start = link.indexOf('offset=')\r\n    const stop = link.indexOf('&limit')\r\n    const finishoff = link.slice(start,stop)\r\n      state.myoffset = finishoff\r\n  }\r\n  axios({\r\n    url: url,\r\n    headers:{\r\n     'Authorization': 'Bearer ' + mytoken\r\n    }\r\n  }).then(resp =>{ \r\n    resp.data.tracks.items.map(element =>{\r\n      state.trackList.push(element)\r\n    })\r\n    state.prev = resp.data.tracks.previous;\r\n    state.next = resp.data.tracks.next;\r\n  //  this.exist()\r\n  //  this.createfav()\r\n  }).catch(error => (new Error(console.log(error))))\r\n}\r\n"]},"metadata":{},"sourceType":"module"}