{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport AppHeader from './AppHeader';\nimport Content from './Content';\nimport axios from 'axios';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.getGenres = function () {\n      axios({\n        url: \"https://api.spotify.com/v1/recommendations/available-genre-seeds\",\n        headers: {\n          'Authorization': 'Bearer ' + _this.state.mytoken\n        }\n      }).then(function (resp) {\n        _this.setState({\n          typeTracks: resp.data.genres\n        });\n      }).catch(function (error) {\n        console.log(new Error(\"Wyst\\u0105pi\\u0142 problem \".concat(error)));\n        var test400 = String(error).indexOf(\"Request failed with status code 400\");\n        var test401 = String(error).indexOf(\"Request failed with status code 401\");\n\n        if (test400 > -1 || test401 > -1) {\n          _this.refreshToken();\n        }\n      });\n    };\n\n    _this.refreshToken = function () {\n      var request = require(\"request\");\n\n      var options = {\n        method: 'POST',\n        url: 'https://accounts.spotify.com/api/token',\n        qs: {\n          grant_type: 'client_credentials'\n        },\n        headers: {\n          'cache-control': 'no-cache',\n          Connection: 'keep-alive',\n          'content-length': '',\n          'accept-encoding': 'gzip, deflate',\n          cookie: '_ga=GA1.2.729828902.1557929894; _gid=GA1.2.629422520.1557929894',\n          Host: 'accounts.spotify.com',\n          'Postman-Token': 'efd95536-22cb-4ef2-ae72-e723183d6cd6,4c56ad54-2d22-4dd2-8774-968820564f2f',\n          'Cache-Control': 'no-cache',\n          Accept: '*/*',\n          'User-Agent': 'PostmanRuntime/7.13.0',\n          Authorization: 'Basic MWYxYjk1ZmEyMzdjNDc4ZWE4ZmVkNjkzYzc3OTM3NTU6MmVlNjIwM2Q5NDU3NDVjNjgzNmExMzg0MWRhMDUzYTY=',\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      };\n      request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n\n        if (response) {\n          response = JSON.parse(response.body);\n          console.log(response.access_token);\n\n          _this.blah(response.access_token); // setTimeout(()=>{this.refreshToken()} , 2000)\n\n        }\n\n        console.log(body);\n      });\n    };\n\n    _this.blah = function (param) {\n      _this.setState({\n        mytoken: param\n      });\n    };\n\n    _this.state = {\n      mytoken: \"\",\n      typeTracks: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      if (!localStorage.getItem(\"limit\")) {\n        localStorage.setItem(\"limit\", 20);\n      }\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(AppHeader, {\n        selectAction: this.selectAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        className: \"menu-line\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App-Content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Content, {\n        action: this.state.action,\n        mytoken: this.state.mytoken,\n        refreshToken: this.refreshToken,\n        getGenres: this.getGenres,\n        typeTracks: this.state.typeTracks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\App.js"],"names":["React","AppHeader","Content","axios","BrowserRouter","Router","App","getGenres","url","headers","state","mytoken","then","resp","setState","typeTracks","data","genres","catch","error","console","log","Error","test400","String","indexOf","test401","refreshToken","request","require","options","method","qs","grant_type","Connection","cookie","Host","Accept","Authorization","response","body","JSON","parse","access_token","blah","param","localStorage","getItem","setItem","selectAction","action","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AppHeader from './AppHeader';\r\nimport Content from './Content';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n \r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      mytoken : \"\",\r\n      typeTracks: []\r\n    }\r\n  }\r\n \r\n  \r\n \r\n  getGenres = () =>{\r\n    axios({\r\n      url: `https://api.spotify.com/v1/recommendations/available-genre-seeds`,\r\n      headers: {\r\n        'Authorization': 'Bearer ' + this.state.mytoken\r\n    }}\r\n    ).then( resp =>{\r\n      this.setState({\r\n        typeTracks: resp.data.genres\r\n      })\r\n    })\r\n    .catch(error =>{\r\n      console.log(new Error(`Wystąpił problem ${error}`))\r\n      const test400 = String(error).indexOf(`Request failed with status code 400`)\r\n      const test401 = String(error).indexOf(`Request failed with status code 401`)\r\n      if ((test400 > -1) || (test401 > -1)){\r\n        this.refreshToken()\r\n      }\r\n    })\r\n  }\r\n \r\n  refreshToken = () =>{\r\n    var request = require(\"request\");\r\n     \r\n    var options = { method: 'POST',\r\n      url: 'https://accounts.spotify.com/api/token',\r\n      qs: { grant_type: 'client_credentials' },\r\n      headers:\r\n       { 'cache-control': 'no-cache',\r\n         Connection: 'keep-alive',\r\n         'content-length': '',\r\n         'accept-encoding': 'gzip, deflate',\r\n         cookie: '_ga=GA1.2.729828902.1557929894; _gid=GA1.2.629422520.1557929894',\r\n         Host: 'accounts.spotify.com',\r\n         'Postman-Token': 'efd95536-22cb-4ef2-ae72-e723183d6cd6,4c56ad54-2d22-4dd2-8774-968820564f2f',\r\n         'Cache-Control': 'no-cache',\r\n         Accept: '*/*',\r\n         'User-Agent': 'PostmanRuntime/7.13.0',\r\n         Authorization: 'Basic MWYxYjk1ZmEyMzdjNDc4ZWE4ZmVkNjkzYzc3OTM3NTU6MmVlNjIwM2Q5NDU3NDVjNjgzNmExMzg0MWRhMDUzYTY=',\r\n         'Content-Type': 'application/x-www-form-urlencoded' } };\r\n     \r\n    request(options,  (error, response, body) => {\r\n      if (error) throw new Error(error);\r\n      if (response){\r\n        response = JSON.parse(response.body)\r\n        console.log(response.access_token)\r\n        this.blah(response.access_token)\r\n        // setTimeout(()=>{this.refreshToken()} , 2000)\r\n      }\r\n      console.log(body);\r\n    });  \r\n  }\r\n\r\n  blah = (param) => {\r\n    this.setState({\r\n      mytoken: param\r\n    })\r\n  }\r\n  \r\n\r\n   \r\n \r\n  render() {\r\n    if(!localStorage.getItem(\"limit\")){\r\n      localStorage.setItem(\"limit\" , 20)\r\n    }\r\n \r\n    return (\r\n      <Router>\r\n      <div className=\"App\">\r\n        <AppHeader selectAction={this.selectAction} />\r\n        <hr className='menu-line'/>\r\n        <div className=\"App-Content\">\r\n          <Content action={this.state.action} mytoken={this.state.mytoken} refreshToken={this.refreshToken} getGenres={this.getGenres} typeTracks={this.state.typeTracks}/>\r\n        </div>\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;"]},"metadata":{},"sourceType":"module"}