{"ast":null,"code":"import axios from 'axios';\nexport var search = function search(event, state, mytoken) {\n  var value = event.currentTarget.value;\n  state.searchValue = value;\n  var timeouter = state.timeout;\n  if (timeouter) clearTimeout(timeouter);\n  timeouter = setTimeout(function () {\n    state.searchValue = value;\n\n    if (value === '') {\n      state.trackList = [];\n      state.prev = null;\n      state.next = null;\n    } else {\n      getTracks(value, 0, state, mytoken);\n    }\n  }, 400);\n};\nexport var getTracks = function getTracks(value, link, state, mytoken) {\n  var timeouter = state.timeout;\n  if (timeouter) clearTimeout(timeouter);\n  timeouter = setTimeout(function () {\n    var url = \"https://api.spotify.com/v1/search?q=\".concat(value, \"&type=track&limit=\").concat(state.limit);\n\n    if (link !== 0) {\n      url = link;\n      var start = link.indexOf('offset=');\n      var stop = link.indexOf('&limit');\n      var finishoff = link.slice(start, stop);\n      state.myoffset = finishoff;\n    }\n\n    axios({\n      url: url,\n      headers: {\n        'Authorization': 'Bearer ' + mytoken\n      }\n    }).then(function (resp) {\n      resp.data.tracks.items.map(function (element) {\n        state.trackList.push(element);\n        console.log(element);\n      });\n      state.prev = resp.data.tracks.previous;\n      state.next = resp.data.tracks.next; //  this.exist()\n      //  this.createfav()\n    }).catch(function (error) {\n      return new Error(console.log(error));\n    });\n  }, 400);\n};","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\Service.js"],"names":["axios","search","event","state","mytoken","value","currentTarget","searchValue","timeouter","timeout","clearTimeout","setTimeout","trackList","prev","next","getTracks","link","url","limit","start","indexOf","stop","finishoff","slice","myoffset","headers","then","resp","data","tracks","items","map","element","push","console","log","previous","catch","error","Error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAOC,KAAP,EAAaC,OAAb,EAAwB;AAC1C,MAAMC,KAAK,GAAGH,KAAK,CAACI,aAAN,CAAoBD,KAAlC;AACFF,EAAAA,KAAK,CAACI,WAAN,GAAoBF,KAApB;AACE,MAAIG,SAAS,GAAGL,KAAK,CAACM,OAAtB;AACA,MAAGD,SAAH,EAAcE,YAAY,CAACF,SAAD,CAAZ;AAChBA,EAAAA,SAAS,GAAGG,UAAU,CAAC,YAAM;AAC3BR,IAAAA,KAAK,CAACI,WAAN,GAAoBF,KAApB;;AACF,QAAGA,KAAK,KAAK,EAAb,EAAgB;AAChBF,MAAAA,KAAK,CAACS,SAAN,GAAmB,EAAnB;AACAT,MAAAA,KAAK,CAACU,IAAN,GAAa,IAAb;AACAV,MAAAA,KAAK,CAACW,IAAN,GAAa,IAAb;AACD,KAJC,MAIG;AACJC,MAAAA,SAAS,CAACV,KAAD,EAAO,CAAP,EAASF,KAAT,EAAeC,OAAf,CAAT;AACA;AACA,GATuB,EASrB,GATqB,CAAtB;AAUD,CAfM;AAmBP,OAAO,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAACV,KAAD,EAAOW,IAAP,EAAYb,KAAZ,EAAkBC,OAAlB,EAA6B;AACpD,MAAII,SAAS,GAAGL,KAAK,CAACM,OAAtB;AACA,MAAGD,SAAH,EAAcE,YAAY,CAACF,SAAD,CAAZ;AACdA,EAAAA,SAAS,GAAEG,UAAU,CAAC,YAAM;AAC5B,QAAIM,GAAG,iDAA0CZ,KAA1C,+BAAoEF,KAAK,CAACe,KAA1E,CAAP;;AACA,QAAGF,IAAI,KAAK,CAAZ,EAAc;AACZC,MAAAA,GAAG,GAAGD,IAAN;AACA,UAAMG,KAAK,GAAGH,IAAI,CAACI,OAAL,CAAa,SAAb,CAAd;AACA,UAAMC,IAAI,GAAGL,IAAI,CAACI,OAAL,CAAa,QAAb,CAAb;AACA,UAAME,SAAS,GAAGN,IAAI,CAACO,KAAL,CAAWJ,KAAX,EAAiBE,IAAjB,CAAlB;AACElB,MAAAA,KAAK,CAACqB,QAAN,GAAiBF,SAAjB;AACH;;AACDtB,IAAAA,KAAK,CAAC;AACJiB,MAAAA,GAAG,EAAEA,GADD;AAEJQ,MAAAA,OAAO,EAAC;AACP,yBAAiB,YAAYrB;AADtB;AAFJ,KAAD,CAAL,CAKGsB,IALH,CAKQ,UAAAC,IAAI,EAAG;AACbA,MAAAA,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2B,UAAAC,OAAO,EAAG;AACnC7B,QAAAA,KAAK,CAACS,SAAN,CAAgBqB,IAAhB,CAAqBD,OAArB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,OAHD;AAIA7B,MAAAA,KAAK,CAACU,IAAN,GAAac,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBO,QAA9B;AACAjC,MAAAA,KAAK,CAACW,IAAN,GAAaa,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiBf,IAA9B,CANa,CAOf;AACA;AACC,KAdD,EAcGuB,KAdH,CAcS,UAAAC,KAAK;AAAA,aAAK,IAAIC,KAAJ,CAAUL,OAAO,CAACC,GAAR,CAAYG,KAAZ,CAAV,CAAL;AAAA,KAdd;AAeC,GAxBoB,EAwBlB,GAxBkB,CAArB;AAyBD,CA5BM","sourcesContent":["import axios from 'axios'\r\n\r\nexport const search = (event,state,mytoken) =>{\r\n    const value = event.currentTarget.value\r\n  state.searchValue = value;\r\n    let timeouter = state.timeout\r\n    if(timeouter) clearTimeout(timeouter);\r\n  timeouter = setTimeout(() => {\r\n    state.searchValue = value\r\n  if(value === ''){\r\n  state.trackList =  [];\r\n  state.prev = null;\r\n  state.next = null;\r\n}else{\r\n getTracks(value,0,state,mytoken)\r\n}\r\n}, 400);\r\n}\r\n\r\n\r\n\r\nexport const getTracks = (value,link,state,mytoken) =>{\r\n  let timeouter = state.timeout\r\n  if(timeouter) clearTimeout(timeouter);\r\n  timeouter= setTimeout(() => {\r\n  let url = `https://api.spotify.com/v1/search?q=${value}&type=track&limit=${state.limit}`\r\n  if(link !== 0){\r\n    url = link;\r\n    const start = link.indexOf('offset=')\r\n    const stop = link.indexOf('&limit')\r\n    const finishoff = link.slice(start,stop)\r\n      state.myoffset = finishoff\r\n  }\r\n  axios({\r\n    url: url,\r\n    headers:{\r\n     'Authorization': 'Bearer ' + mytoken\r\n    }\r\n  }).then(resp =>{ \r\n    resp.data.tracks.items.map(element =>{\r\n      state.trackList.push(element)\r\n      console.log(element)\r\n    })\r\n    state.prev = resp.data.tracks.previous;\r\n    state.next = resp.data.tracks.next;\r\n  //  this.exist()\r\n  //  this.createfav()\r\n  }).catch(error => (new Error(console.log(error))))\r\n  }, 400);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}