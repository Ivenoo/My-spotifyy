{"ast":null,"code":"import axios from 'axios'; ///FIND SOUNDS\n\nexport var search = function search(event, state, mytoken, link) {\n  var value = event.currentTarget.value;\n  state.searchValue = value;\n  state.searchValue = value;\n\n  if (value === '') {\n    state.trackList = [];\n    state.prev = null;\n    state.next = null;\n  } else {\n    var url = \"https://api.spotify.com/v1/search?q=\".concat(value, \"&type=track&limit=\").concat(state.limit);\n\n    if (link !== 0) {\n      url = link;\n      var start = link.indexOf('offset=');\n      var stop = link.indexOf('&limit');\n      var finishoff = link.slice(start, stop);\n      state.myoffset = finishoff;\n    }\n\n    axios({\n      url: url,\n      headers: {\n        'Authorization': 'Bearer ' + mytoken\n      }\n    }).then(function (resp) {\n      state.trackList = [];\n      resp.data.tracks.items.map(function (element) {\n        return state.trackList.push(element);\n      });\n      state.prev = resp.data.tracks.previous;\n      state.next = resp.data.tracks.next;\n      exist(state);\n    }).catch(function (error) {\n      return new Error(console.log(error));\n    });\n    return 1;\n  }\n};\nexport var getTracks = function getTracks(value, link, state, mytoken) {\n  var url = \"https://api.spotify.com/v1/search?q=\".concat(value, \"&type=track&limit=\").concat(state.limit);\n\n  if (link !== 0) {\n    url = link;\n    var start = link.indexOf('offset=');\n    var stop = link.indexOf('&limit');\n    var finishoff = link.slice(start, stop);\n    state.myoffset = finishoff;\n  }\n\n  axios({\n    url: url,\n    headers: {\n      'Authorization': 'Bearer ' + mytoken\n    }\n  }).then(function (resp) {\n    state.trackList = [];\n    resp.data.tracks.items.map(function (element) {\n      return state.trackList.push(element);\n    });\n    state.prev = resp.data.tracks.previous;\n    state.next = resp.data.tracks.next;\n    exist(state);\n  }).catch(function (error) {\n    return new Error(console.log(error));\n  });\n};\n\nvar exist = function exist(state) {\n  if (state.trackList.length <= 0 && state.searchValue.length > 0) {\n    state.notFindTracks = 'exist';\n  } else {\n    state.notFindTracks = 'notexist';\n  }\n};","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\Service.js"],"names":["axios","search","event","state","mytoken","link","value","currentTarget","searchValue","trackList","prev","next","url","limit","start","indexOf","stop","finishoff","slice","myoffset","headers","then","resp","data","tracks","items","map","element","push","previous","exist","catch","error","Error","console","log","getTracks","length","notFindTracks"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\n                      ///FIND SOUNDS\r\nexport const search = (event,state,mytoken,link) =>{\r\n    const value = event.currentTarget.value\r\n  state.searchValue = value;\r\n    state.searchValue = value\r\n  if(value === ''){\r\n  state.trackList =  [];\r\n  state.prev = null;\r\n  state.next = null;\r\n}else{\r\n  let url = `https://api.spotify.com/v1/search?q=${value}&type=track&limit=${state.limit}`\r\n  if(link !== 0){\r\n    url = link;\r\n    const start = link.indexOf('offset=')\r\n    const stop = link.indexOf('&limit')\r\n    const finishoff = link.slice(start,stop)\r\n      state.myoffset = finishoff\r\n  }\r\n  axios({\r\n    url: url,\r\n    headers:{\r\n     'Authorization': 'Bearer ' + mytoken\r\n    }\r\n  }).then(resp =>{ \r\n    state.trackList = [];\r\n    resp.data.tracks.items.map(element =>\r\n      state.trackList.push(element)\r\n    )\r\n    state.prev = resp.data.tracks.previous;\r\n    state.next = resp.data.tracks.next;\r\n     exist(state)\r\n  }).catch(error => (new Error(console.log(error))))\r\n  return 1;\r\n}\r\n}\r\n\r\nexport const getTracks = (value,link,state,mytoken) =>{\r\n  \r\n  let url = `https://api.spotify.com/v1/search?q=${value}&type=track&limit=${state.limit}`\r\n  if(link !== 0){\r\n    url = link;\r\n    const start = link.indexOf('offset=')\r\n    const stop = link.indexOf('&limit')\r\n    const finishoff = link.slice(start,stop)\r\n      state.myoffset = finishoff\r\n  }\r\n  axios({\r\n    url: url,\r\n    headers:{\r\n     'Authorization': 'Bearer ' + mytoken\r\n    }\r\n  }).then(resp =>{ \r\n    state.trackList = [];\r\n    resp.data.tracks.items.map(element =>\r\n      state.trackList.push(element)\r\n    )\r\n    state.prev = resp.data.tracks.previous;\r\n    state.next = resp.data.tracks.next;\r\n     exist(state)\r\n  }).catch(error => (new Error(console.log(error))))\r\n}\r\n\r\nconst exist =(state) =>{\r\n  if(state.trackList.length <= 0 && state.searchValue.length > 0){\r\n\r\n    state.notFindTracks = 'exist';\r\n\r\n  }else{\r\n\r\n    state.notFindTracks = 'notexist';\r\n\r\n}\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}