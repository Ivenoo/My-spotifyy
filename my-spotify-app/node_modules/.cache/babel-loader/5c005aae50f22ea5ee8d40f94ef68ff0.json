{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\src\\\\FindAlbum.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { testo } from './Service.js';\n\nvar FindAlbum =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FindAlbum, _React$Component);\n\n  function FindAlbum(props) {\n    var _this;\n\n    _classCallCheck(this, FindAlbum);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FindAlbum).call(this, props));\n    _this.state = {\n      searchValue: [],\n      albumList: [],\n      searchValueToExist: '',\n      notFindAlbum: 'notexist',\n      timeout: 0,\n      valuee: ''\n    };\n    return _this;\n  }\n\n  _createClass(FindAlbum, [{\n    key: \"search\",\n    value: function search(e) {\n      var value = e.currentTarget.value;\n      var blah = testo(value);\n      this.setState({\n        valuee: blah\n      });\n    } // search(e){\n    //   const value = e.currentTarget.value\n    //   this.setState({\n    //     searchValueToExist: value\n    //   })\n    //   if(this.state.timeout) clearTimeout(this.state.timeout);\n    //   this.state.timeout = setTimeout(() => {\n    //   this.setState({\n    //     searchValue: value\n    //   })\n    //   if(value === ''){\n    //   this.setState({\n    //   albumList: []\n    // })\n    // }else{\n    //   this.getList(value)\n    // }\n    // }, 400);\n    // }\n    // getList = (value) =>{\n    //   axios({\n    //     url: `https://api.spotify.com/v1/search?q=${value}&type=album&limit=10`,\n    //     headers:{\n    //      'Authorization': 'Bearer ' + this.props.mytoken\n    //     }\n    //   }).then(resp =>{ \n    //     this.setState({\n    //       albumList: resp.data.albums.items\n    //      })\n    //      this.exist()\n    //   }).catch(error => (new Error(console.log(error))))\n    // }\n    // listen(url){\n    //   if(url != null){\n    // window.open(url)\n    // }\n    // }\n    // showSongs(index, id){\n    // const div= document.getElementById(index);\n    // if(this.state.timeout) clearTimeout(this.state.timeout);\n    //   this.state.timeout = setTimeout(() => {\n    // if(div.innerHTML === \"\"){\n    //   axios({\n    //     url: `https://api.spotify.com/v1/albums/${id}/tracks`,\n    //     headers:{\n    //      'Authorization': 'Bearer ' + this.props.mytoken\n    //     }\n    //   }).then(resp =>{ \n    //    resp.data.items.map(element => {\n    //      if(element.preview_url != null){\n    //     return(div.innerHTML = div.innerHTML + `<li>  <a  class=\"name-songs-linked\" style=\"color:blue\" href=${element.preview_url} target=\"_blank\"> ${element.name} </a>  </li><br/>`)\n    //   }else{\n    //     return(div.innerHTML = div.innerHTML + `<li> ${element.name} </li><br/>`)\n    //   }})\n    //   }).catch(error => (new Error(console.log(error))))\n    // }\n    // }, 400);\n    // }\n    // changeButton = (id) =>{\n    //   document.getElementById(id).style.display = \"none\";\n    //   document.getElementById(id +'a').style.display = \"block\";\n    // }\n    // openList = (index, id) =>{\n    //   this.showSongs(index, id)\n    //  // changeButton()\n    //  this.changeButton(id)\n    // }\n    // closeList = (index, id) =>{\n    //   // const div= document.getElementById(index);\n    //   document.getElementById(index).innerHTML = \"\";\n    //   document.getElementById(id).style.display = \"block\";\n    //   document.getElementById(id +'a').style.display = \"none\";\n    // }\n    // exist =() =>{\n    //   if(this.state.albumList.length <= 0 && this.state.searchValueToExist.length > 0){\n    //   this.setState({\n    //     notFindAlbum: 'exist'\n    //   })\n    //   }else{\n    //     this.setState({\n    //       notFindAlbum: 'notexist'\n    //     })\n    // }\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"szukajka\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Albums...\",\n        onChange: this.search.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), \"search: \", this.state.valuee, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return FindAlbum;\n}(React.Component);\n\nexport default FindAlbum;","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\FindAlbum.js"],"names":["React","axios","BrowserRouter","Route","testo","FindAlbum","props","state","searchValue","albumList","searchValueToExist","notFindAlbum","timeout","valuee","e","value","currentTarget","blah","setState","search","bind","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC;AACA,SAAQC,KAAR,QAAoB,cAApB;;IAKMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,mFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,SAAS,EAAC,EAFC;AAGXC,MAAAA,kBAAkB,EAAE,EAHT;AAIXC,MAAAA,YAAY,EAAE,UAJH;AAKXC,MAAAA,OAAO,EAAE,CALE;AAMXC,MAAAA,MAAM,EAAE;AANG,KAAb;AAFgB;AAUjB;;;;2BAIQC,C,EAAE;AACR,UAAMC,KAAK,GAAGD,CAAC,CAACE,aAAF,CAAgBD,KAA9B;AACC,UAAME,IAAI,GAAGb,KAAK,CAACW,KAAD,CAAlB;AACD,WAAKG,QAAL,CAAc;AACZL,QAAAA,MAAM,EAAEI;AADI,OAAd;AAGF,K,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAGW;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,kBAA/B;AAAkD,QAAA,QAAQ,EAAE,KAAKE,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADC,EACoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADpF,cAEO,KAAKb,KAAL,CAAWM,MAFlB,EAEyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFzB,CADH,CADF;AA0BD;;;;EA7IqBb,KAAK,CAACqB,S;;AAgJ9B,eAAehB,SAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport {testo} from './Service.js'\r\n\r\n\r\n\r\n\r\nclass FindAlbum extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchValue: [],\r\n      albumList:[],\r\n      searchValueToExist: '',\r\n      notFindAlbum: 'notexist',\r\n      timeout: 0,\r\n      valuee: ''\r\n    }\r\n  }\r\n\r\n\r\n\r\n    search(e){\r\n     const value = e.currentTarget.value\r\n      const blah = testo(value)\r\n     this.setState({\r\n       valuee: blah\r\n     })\r\n  }\r\n\r\n// search(e){\r\n//   const value = e.currentTarget.value\r\n//   this.setState({\r\n//     searchValueToExist: value\r\n//   })\r\n//   if(this.state.timeout) clearTimeout(this.state.timeout);\r\n//   this.state.timeout = setTimeout(() => {\r\n//   this.setState({\r\n//     searchValue: value\r\n//   })\r\n//   if(value === ''){\r\n//   this.setState({\r\n//   albumList: []\r\n// })\r\n// }else{\r\n//   this.getList(value)\r\n// }\r\n// }, 400);\r\n// }\r\n// getList = (value) =>{\r\n//   axios({\r\n//     url: `https://api.spotify.com/v1/search?q=${value}&type=album&limit=10`,\r\n//     headers:{\r\n//      'Authorization': 'Bearer ' + this.props.mytoken\r\n//     }\r\n//   }).then(resp =>{ \r\n//     this.setState({\r\n//       albumList: resp.data.albums.items\r\n//      })\r\n//      this.exist()\r\n//   }).catch(error => (new Error(console.log(error))))\r\n// }\r\n// listen(url){\r\n//   if(url != null){\r\n// window.open(url)\r\n// }\r\n// }\r\n\r\n// showSongs(index, id){\r\n// const div= document.getElementById(index);\r\n\r\n// if(this.state.timeout) clearTimeout(this.state.timeout);\r\n//   this.state.timeout = setTimeout(() => {\r\n// if(div.innerHTML === \"\"){\r\n//   axios({\r\n//     url: `https://api.spotify.com/v1/albums/${id}/tracks`,\r\n//     headers:{\r\n//      'Authorization': 'Bearer ' + this.props.mytoken\r\n//     }\r\n//   }).then(resp =>{ \r\n//    resp.data.items.map(element => {\r\n//      if(element.preview_url != null){\r\n//     return(div.innerHTML = div.innerHTML + `<li>  <a  class=\"name-songs-linked\" style=\"color:blue\" href=${element.preview_url} target=\"_blank\"> ${element.name} </a>  </li><br/>`)\r\n//   }else{\r\n//     return(div.innerHTML = div.innerHTML + `<li> ${element.name} </li><br/>`)\r\n//   }})\r\n\r\n//   }).catch(error => (new Error(console.log(error))))\r\n// }\r\n// }, 400);\r\n// }\r\n// changeButton = (id) =>{\r\n//   document.getElementById(id).style.display = \"none\";\r\n//   document.getElementById(id +'a').style.display = \"block\";\r\n// }\r\n// openList = (index, id) =>{\r\n//   this.showSongs(index, id)\r\n//  // changeButton()\r\n//  this.changeButton(id)\r\n// }\r\n// closeList = (index, id) =>{\r\n//   // const div= document.getElementById(index);\r\n//   document.getElementById(index).innerHTML = \"\";\r\n//   document.getElementById(id).style.display = \"block\";\r\n//   document.getElementById(id +'a').style.display = \"none\";\r\n// }\r\n\r\n\r\n// exist =() =>{\r\n//   if(this.state.albumList.length <= 0 && this.state.searchValueToExist.length > 0){\r\n//   this.setState({\r\n//     notFindAlbum: 'exist'\r\n//   })\r\n//   }else{\r\n//     this.setState({\r\n//       notFindAlbum: 'notexist'\r\n//     })\r\n// }\r\n// }\r\n\r\n\r\n  render() {\r\n    return( \r\n      <div>\r\n         <div className=\"szukajka\">\r\n        <input type=\"text\" placeholder=\"Search Albums...\" onChange={this.search.bind(this)}/><br/>\r\n       search: {this.state.valuee}<br/>\r\n       </div>\r\n       {/* <span className={this.state.notFindAlbum}><strong className=\"title\">{this.state.searchValueToExist} </strong> not exist</span>\r\n       <ol>\r\n       { this.state.albumList.map((element, index)=>{\r\n          return(\r\n            <li  key={index}>\r\n           Author: {element.artists.map((element2, index) => { \r\n             return(<span key={index +1} >{element2.name}, </span>)})}<br/>\r\n            Album: <strong className=\"album-name\">\" {element.name} \"</strong><br/>\r\n            <img src={element.images[2].url}\r\n            height=\"40px\" width=\"40px\" alt=\" \" /><br/>\r\n            <button id={element.id} key= {index +2} className=\"main-button\" onClick={this.openList.bind(this, index, element.id)}>tracks from this album</button>\r\n            <button id={element.id +'a'} key= {index +3} className=\"main-buttonc\" onClick={this.closeList.bind(this, index , element.id) }>close tracks list</button><br/>\r\n            <ol id={index} className=\"to-kill\"></ol><br/><br/><br/>\r\n            </li>\r\n            )\r\n          }\r\n        )}\r\n        </ol> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FindAlbum;\r\n"]},"metadata":{},"sourceType":"module"}