{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Iveno\\\\Desktop\\\\Gicior_Z_Bolqiem\\\\My-spotify\\\\my-spotify-app\\\\src\\\\RandomAlbums.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { randomOffset, randomLetter } from './Service';\n\nvar RandomAlbums =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RandomAlbums, _React$Component);\n\n  function RandomAlbums(props) {\n    var _this;\n\n    _classCallCheck(this, RandomAlbums);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomAlbums).call(this, props));\n\n    _this.getList = function () {\n      axios({\n        url: \"https://api.spotify.com/v1/search?q=\".concat(randomLetter(), \"&type=album&limit=10&offset=\").concat(randomOffset()),\n        headers: {\n          'Authorization': 'Bearer ' + _this.props.mytoken\n        }\n      }).then(function (resp) {\n        _this.setState({\n          albumList: resp.data.albums.items\n        });\n      }).catch(function (error) {\n        return new Error(console.log(error));\n      });\n    };\n\n    _this.state = {\n      albumList: [],\n      check: 0\n    };\n    return _this;\n  }\n\n  _createClass(RandomAlbums, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.mytoken !== '') {\n        this.getList();\n        this.setState({\n          check: 1\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      if (this.props.mytoken !== \"\" && this.state.check === 0) {\n        this.getList();\n        this.setState({\n          check: 1\n        });\n      }\n    } //POBIERANIE INFORMACJI O ALBUMACH Z API//\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.albumList.map(function (element, index) {\n        return React.createElement(\"span\", {\n          key: index,\n          className: \"Single-Album\",\n          onClick: function onClick() {\n            return window.open(element.external_urls.spotify);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"Single-Album-Details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"Pusty\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"Single-Album-Details-Text\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"Single-Album-Title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, element.artists.length > 1 ? 'AUTHORS' : 'AUTHOR', React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })), element.artists.map(function (element2, index) {\n          return React.createElement(\"span\", {\n            key: index + 1,\n            className: \"e\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, \" \", element2.name, React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }), \" \");\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          className: \"Single-Album-Title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"ALBUM: \"), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), element.name)), React.createElement(\"img\", {\n          src: element.images[1].url,\n          className: \"Single-Album-Image\",\n          alt: \" \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return RandomAlbums;\n}(React.Component);\n\nexport default RandomAlbums;","map":{"version":3,"sources":["C:\\Users\\Iveno\\Desktop\\Gicior_Z_Bolqiem\\My-spotify\\my-spotify-app\\src\\RandomAlbums.js"],"names":["React","axios","randomOffset","randomLetter","RandomAlbums","props","getList","url","headers","mytoken","then","resp","setState","albumList","data","albums","items","catch","error","Error","console","log","state","check","map","element","index","window","open","external_urls","spotify","artists","length","element2","name","images","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { randomOffset, randomLetter} from './Service'\r\n\r\n\r\nclass RandomAlbums extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      albumList:[],\r\n      check: 0,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.props.mytoken !== ''){\r\n      this.getList()\r\n      this.setState({\r\n        check: 1\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(){\r\n    if(this.props.mytoken !== \"\" && this.state.check === 0){\r\n      this.getList()\r\n      this.setState({\r\n        check: 1,\r\n      })\r\n    }\r\n  }\r\n\r\n    //POBIERANIE INFORMACJI O ALBUMACH Z API//\r\n  getList = () =>{\r\n    axios({\r\n      url: `https://api.spotify.com/v1/search?q=${randomLetter()}&type=album&limit=10&offset=${randomOffset()}`,\r\n      headers:{\r\n        'Authorization': 'Bearer ' + this.props.mytoken\r\n      }\r\n    }).then(resp =>{ \r\n      this.setState({\r\n        albumList: resp.data.albums.items\r\n      })\r\n    }).catch(error => (new Error(console.log(error))))\r\n  }\r\n\r\n\r\n  render() {\r\n    return( \r\n      <div>\r\n        { this.state.albumList.map((element, index)=>\r\n          <span key={index} className=\"Single-Album\" onClick={()=> window.open(element.external_urls.spotify)}>\r\n            <span className=\"Single-Album-Details\">\r\n            <div className=\"Pusty\"></div>\r\n              <span className=\"Single-Album-Details-Text\">\r\n                <span className=\"Single-Album-Title\">\r\n                  {(element.artists.length > 1 )? 'AUTHORS' : 'AUTHOR'}<br/>\r\n                </span>\r\n                {element.artists.map((element2, index) => {\r\n                  return(<span key={index +1}  className=\"e\"> {element2.name}<br/> </span>)}\r\n                )}\r\n                <br/>\r\n                <span className=\"Single-Album-Title\">ALBUM: </span> <br/>\r\n                {element.name}\r\n                </span>\r\n            </span>\r\n            <img src={element.images[1].url} className='Single-Album-Image' alt=\" \" />\r\n          </span>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RandomAlbums;\r\n"]},"metadata":{},"sourceType":"module"}