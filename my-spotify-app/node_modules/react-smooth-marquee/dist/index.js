"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactDom = require("react-dom");

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Marquee = function (_React$Component) {
    _inherits(Marquee, _React$Component);

    function Marquee(props) {
        _classCallCheck(this, Marquee);

        var _this = _possibleConstructorReturn(this, (Marquee.__proto__ || Object.getPrototypeOf(Marquee)).call(this, props));

        _this.setOuterRef = _this.setOuterRef_.bind(_this);
        _this.setContentRef = _this.setContentRef_.bind(_this);
        _this.tick = _this.tick_.bind(_this);
        _this.tickRequested = false;
        _this.lastTimestamp = null;
        _this.x = 0;
        return _this;
    }

    _createClass(Marquee, [{
        key: "setOuterRef_",
        value: function setOuterRef_(ref) {
            this.outerDiv = ref;
            this.start();
        }
    }, {
        key: "setContentRef_",
        value: function setContentRef_(ref) {
            this.innerDiv = ref;
            this.start();
        }
    }, {
        key: "start",
        value: function start() {
            if (this.outerDiv && this.innerDiv && !this.tickRequested) {
                window.requestAnimationFrame(this.tick);
                this.tickRequested = true;
            }
        }
    }, {
        key: "tick_",
        value: function tick_(timestamp) {
            if (!this.outerDiv || !this.innerDiv) {
                // one or more components have been unmounted.  stop animation
                // until they are remounted (if ever)
                this.tickRequested = false;
                return;
            }

            if (this.lastTimestamp !== null) {
                this.updateAnimation(timestamp - this.lastTimestamp);
            }

            this.lastTimestamp = timestamp;
            window.requestAnimationFrame(this.tick);
            this.lastTimestamp = timestamp;
        }
    }, {
        key: "updateAnimation",
        value: function updateAnimation(deltaT) {
            this.x -= deltaT * this.getVelocity();
            if (this.x + this.innerDiv.clientWidth < 0) this.x += this.innerDiv.clientWidth + this.outerDiv.clientWidth;
            this.innerDiv.style.transform = this.calculateTransform();
        }
    }, {
        key: "getVelocity",
        value: function getVelocity() {
            return this.props.velocity ? this.props.velocity : 0.12;
        }
    }, {
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                "div",
                { className: "Marquee", ref: this.setOuterRef },
                _react2.default.createElement(
                    "div",
                    { className: "MarqueeContent", ref: this.setContentRef, style: { transform: this.calculateTransform() } },
                    this.props.children
                )
            );
        }
    }, {
        key: "calculateTransform",
        value: function calculateTransform() {
            return "translateX(" + this.x + "px)";
        }
    }]);

    return Marquee;
}(_react2.default.Component);

exports.default = Marquee;